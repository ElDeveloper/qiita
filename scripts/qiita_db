#!/usr/bin/env python

# -----------------------------------------------------------------------------
# Copyright (c) 2014--, The Qiita Development Team.
#
# Distributed under the terms of the BSD 3-clause License.
#
# The full license is in the file LICENSE, distributed with this software.
# -----------------------------------------------------------------------------

import click

from qiita_db.util import get_filetypes, get_filepath_types
from qiita_db.commands import (sample_template_adder, make_study_from_cmd,
                               load_raw_data_cmd, import_preprocessed_data)


@click.group()
def qiita_db():
    pass


@qiita_db.command()
@click.option('--fp', required=True, type=click.Path(resolve_path=True,
              readable=True, exists=True), multiple=True,
              help='Path to the raw data file. This option can be used '
              'multiple times if there are multiple raw data files.')
@click.option('--fp_type', required=True, multiple=True, help='Describes the '
              'contents of the file. Pass one fp_type per fp.',
              type=click.Choice(get_filepath_types().keys()))
@click.option('--filetype', required=True,
              type=click.Choice(get_filetypes().keys()),
              help='The type of data')
@click.option('--study', multiple=True, help='Associate the data with this '
              'study. This option can be used multiple times if the data '
              'should be associated with multiple studies', type=int,
              required=True)
def load_raw_data(fp, fp_type, filetype, study):
    load_raw_data_cmd(fp, fp_type, filetype, study)


@qiita_db.command()
@click.option('--owner', help="The email address of the owner of the study")
@click.option('--title', help="The title of the study")
@click.option('--info', type=click.File(mode='r'),
              help="filepath of file with study information in python"
              "config file format")
def insert_study_to_db(owner, title, info):
    make_study_from_cmd(owner, title, info)


@qiita_db.command()
@click.option('--study_id', help="Study id associated with data")
@click.option('--params_table', help="Name of the paramaters table for the"
              "preprocessed data")
@click.option('--filedir', help="Directory containing preprocessed data")
@click.option('--filetype', help="Filepath_type_id of the files")
@click.option('--params_id',
              help="id in the paramater table associated with the parameters")
@click.option('--submitted_to_insdc', is_flag=True,
              help="If provided, the preprocessed data have been submitted"
                   " to insdc")
def insert_preprocessed_data(study_id, filedir, filetype, params_table,
                             params_id, submitted_to_insdc):
    import_preprocessed_data(study_id, filedir, filetype, params_table,
                             params_id, submitted_to_insdc)


@qiita_db.command()
@click.option('--fp', required=True,
              type=click.Path(resolve_path=True, readable=True, exists=True),
              help='Path to the tab delimited file holding the sample '
                   'template information')
@click.option('--study', required=True, type=int,
              help='Associate the sample template with this study')
def add_sample_template(fp, study):
    """Adds a sample template to the database"""
    sample_template_adder(fp, study)


if __name__ == '__main__':
    qiita_db()
